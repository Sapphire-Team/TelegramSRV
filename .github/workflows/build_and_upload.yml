name: Build and Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        java: [ 21 ] 
        os: [ ubuntu-latest ] 
    runs-on: ${{ matrix.os }}
    if: |
      !contains(github.event.head_commit.message, '[no ci]') # Пропускаем если в коммите есть [no ci]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get mod version from gradle.properties
        id: get_version
        run: |
          MOD_VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build with Gradle (buildShadow)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: buildShadow 

      - name: List files in build
        run: ls -la build

      - name: List files in build/libs
        run: ls -la build/libs

      - name: Capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/*.jar 

      - name: Get current date and time
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d-%H.%M')"

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: "Release v${{ env.MOD_VERSION }}" # Используем версию из gradle.properties
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ env.MOD_VERSION }}" # Используем версию из gradle.properties
          removeArtifacts: true
          allowUpdates: true
          artifacts: "build/libs/*.jar" # Указываем путь к fat JAR файлу
          artifactContentType: application/java-archive
